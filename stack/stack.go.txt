package main

import (
	"fmt"
)

type stack struct {
	top int
}

var (
	element []int
)

func main() {
	s := new(stack)
	s.top = -1
	s.push(1)
	s.push(2)
	s.push(3)
	s.push(4)
	fmt.Println(element)
	s.pop()
	s.pop()
	s.pop()
	fmt.Println(element)
}

func (s *stack) push(item int) {
	element = append(element, item)
	s.top = s.top + 1
}

func (s *stack) pop() {
	if !s.isEmpty() {
		s.top = s.top - 1
		element = element[:s.top+1]
	}
}

func (s *stack) isEmpty() bool {
	if s.top == -1 {
		fmt.Println("Stack is empty!!")
		return true
	} else {
		return false
	}
}

func (s *stack) isFull() {

}

func (s *stack) peek() int {
	if !s.isEmpty() {
		return element[s.top]
	}
	return 0
}
